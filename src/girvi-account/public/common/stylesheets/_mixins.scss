//
// Define all the global mixins here

@mixin font-face($font-family, $woff-file, $ttf-file, $font-weight : normal, $font-style :normal, $font-stretch : normal) {
	@font-face {
		font-family: '#{$font-family}';
		src:$woff-file format('woff'), 
			$ttf-file format('truetype');
		font-weight: $font-weight;
		font-style: $font-style;
		font-stretch: $font-stretch;
	}
}

@mixin svg-image($image-name,
            $width,
            $height, 
            $positionX:0px,
            $positionY:0px,
            $extension:'svg',
            $path: $default-svg-image-path) {
          content: url(#{$path}/#{$image-name}.#{$extension}); 
          width: $width;
          height: $height;
  }

@mixin svg-background-image($image-name,
            $width,
            $height, 
            $positionX:0px,
            $positionY:0px,
            $extension:'svg',
            $path: $default-svg-image-path) {
          background: url(#{$path}/#{$image-name}.#{$extension}); 
          width: $width;
          height: $height;
  }

@mixin image($image-name,
            $width,
            $height, 
            $extension:'png',
            $path: $default-image-path) {
    	background-image: url(#{$path}/#{$image-name}.#{$extension});
    	background-repeat:no-repeat;
    	width: $width;
    	height: $height;
        @include retina-2x-image{
              background-image: url(#{$path}/#{$image-name}#{$retina-2x-suffix}.#{$extension}), url(#{$path}/#{$image-name}.#{$extension});
        }
        @include retina-3x-image{
              background-image: url(#{$path}/#{$image-name}#{$retina-3x-suffix}.#{$extension}), url(#{$path}/#{$image-name}.#{$extension});
        }
  }

@mixin non-responsive-image($image-name,
            $width,
            $height, 
            $extension:'png',
            $path: $default-image-path) {
    	background-image: url(#{$path}/#{$image-name}.#{$extension});
    	background-repeat:no-repeat;
    	width: $width;
    	height: $height;
}

//Retina Common Sprite 
@mixin common-sprite ($position, $width:"", $height:"", $extension:'png')
{
              @include sprite-image($sprite-common-name,                                   
                                    $position,
                                    $width,
                                    $height);
}

@mixin sprite-image($sprite-name,
                    $position,
                    $width,
                    $height, 
                    $extension:'png') {
       background-image: url(#{$default-image-path}/#{$sprite-name}.#{$extension});
       background-position: $position;
       background-repeat:no-repeat;
       width: $width;
       height: $height;
       @include retina-2x-image{
            background-image: url(#{$default-image-path}/#{$sprite-name}#{$retina-2x-suffix}.#{$extension}),url(#{$default-image-path}/#{$sprite-name}.#{$extension});
            @include background-size($sprite-2x-width $sprite-2x-height);
       }
       @include retina-3x-image{
            background-image: url(#{$default-image-path}/#{$sprite-name}#{$retina-3x-suffix}.#{$extension}),url(#{$default-image-path}/#{$sprite-name}.#{$extension});
            @include background-size($sprite-3x-width $sprite-3x-height);
       }
}

@mixin background-size($size){
  -webkit-background-size: $size;
  -moz-background-size: $size;
  -ms-background-size: $size;
  -o-background-size: $size;
  background-size: $size;
}

@mixin retina-2x-image(){
       @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    @content; 
  }
}

@mixin retina-3x-image(){
       @media (min--moz-device-pixel-ratio: 2.3),
         (-o-min-device-pixel-ratio: 4.6/2),
         (-webkit-min-device-pixel-ratio: 2.3),
         (min-device-pixel-ratio: 2.3),
         (min-resolution: 2.3dppx) {
    @content; 
  }
}

@mixin spinner-animation($delay,$deg){
  -webkit-animation-delay: $delay;
  animation-delay: $delay;
  -webkit-transform: rotate($deg);
  -ms-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin image-rotation($deg) {
  transform: translateY($deg);
  -webkit-transform: translateY($deg);
  -ms-transform: translateY($deg);
  -o-transform: translateY($deg);
  -moz-transform: translateY($deg);
}

@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin rotate($deg){
    -webkit-transform: rotate($deg);
    -ms-transform: translateY($deg);
    -moz-transform: rotate($deg);
    -o-transform: rotate($deg);  
}

@mixin keyframes-spinner-fade($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

@mixin set-link-style-all {
  &, &:hover, &:link, &:active, &:visited {
        @content;
    }
}

@mixin bg-gradient($start-colour, $end-colour) {
    background-color: $start-colour;
    background-image: -webkit-gradient(linear, top, bottom, from($start-colour), to($end-colour));
    background-image: -webkit-linear-gradient(top, $start-colour, $end-colour);
    background-image:    -moz-linear-gradient(top, $start-colour, $end-colour);
    background-image:     -ms-linear-gradient(top, $start-colour, $end-colour);
    background-image:      -o-linear-gradient(top, $start-colour, $end-colour);
    background-image:         linear-gradient(top, $start-colour, $end-colour);
    filter:            progid:DXImageTransform.Microsoft.gradient(start-colourStr='#{$start-colour}', end-colourStr='#{$end-colour}');
}

@mixin gradient-arrow($degree, $start-colour, $end-colour, $opacity){
    background-image: -webkit-gradient($degree, $start-colour, $end-colour, $opacity);
    background-image: -webkit-linear-gradient($degree, $start-colour, $end-colour, $opacity);
    background-image: -moz-linear-gradient($degree, $start-colour, $end-colour, $opacity);
    background-image: -ms-linear-gradient($degree, $start-colour, $end-colour, $opacity);
    background-image: -o-linear-gradient($degree, $start-colour, $end-colour, $opacity);
    background-image:  linear-gradient($degree, $start-colour, $end-colour, $opacity);
}
